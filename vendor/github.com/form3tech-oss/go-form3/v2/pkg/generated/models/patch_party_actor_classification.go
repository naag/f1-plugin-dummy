// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"
	"strconv"

	"github.com/form3tech-oss/go-form3/v2/pkg/client"
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// PatchPartyActorClassification patch party actor classification
// swagger:model PatchPartyActorClassification
type PatchPartyActorClassification struct {

	// pep classification
	PepClassification *string `json:"pep_classification,omitempty"`

	// role
	Role []PartyActorClassificationRole `json:"role"`

	// shareholder ownership percentage
	ShareholderOwnershipPercentage *string `json:"shareholder_ownership_percentage,omitempty"`
}

func PatchPartyActorClassificationWithDefaults(defaults client.Defaults) *PatchPartyActorClassification {
	return &PatchPartyActorClassification{

		PepClassification: defaults.GetStringPtr("PatchPartyActorClassification", "pep_classification"),

		Role: make([]PartyActorClassificationRole, 0),

		ShareholderOwnershipPercentage: defaults.GetStringPtr("PatchPartyActorClassification", "shareholder_ownership_percentage"),
	}
}

func (m *PatchPartyActorClassification) WithPepClassification(pepClassification string) *PatchPartyActorClassification {

	m.PepClassification = &pepClassification

	return m
}

func (m *PatchPartyActorClassification) WithoutPepClassification() *PatchPartyActorClassification {
	m.PepClassification = nil
	return m
}

func (m *PatchPartyActorClassification) WithRole(role []PartyActorClassificationRole) *PatchPartyActorClassification {

	m.Role = role

	return m
}

func (m *PatchPartyActorClassification) WithShareholderOwnershipPercentage(shareholderOwnershipPercentage string) *PatchPartyActorClassification {

	m.ShareholderOwnershipPercentage = &shareholderOwnershipPercentage

	return m
}

func (m *PatchPartyActorClassification) WithoutShareholderOwnershipPercentage() *PatchPartyActorClassification {
	m.ShareholderOwnershipPercentage = nil
	return m
}

// Validate validates this patch party actor classification
func (m *PatchPartyActorClassification) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PatchPartyActorClassification) validateRole(formats strfmt.Registry) error {

	if swag.IsZero(m.Role) { // not required
		return nil
	}

	for i := 0; i < len(m.Role); i++ {

		if err := m.Role[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("role" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *PatchPartyActorClassification) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PatchPartyActorClassification) UnmarshalBinary(b []byte) error {
	var res PatchPartyActorClassification
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *PatchPartyActorClassification) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}

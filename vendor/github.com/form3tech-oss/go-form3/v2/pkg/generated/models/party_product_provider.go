// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PartyProductProvider party product provider
// swagger:model PartyProductProvider
type PartyProductProvider string

const (

	// PartyProductProviderEBURY captures enum value "EBURY"
	PartyProductProviderEBURY PartyProductProvider = "EBURY"
)

// for schema
var partyProductProviderEnum []interface{}

func init() {
	var res []PartyProductProvider
	if err := json.Unmarshal([]byte(`["EBURY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		partyProductProviderEnum = append(partyProductProviderEnum, v)
	}
}

func (m PartyProductProvider) validatePartyProductProviderEnum(path, location string, value PartyProductProvider) error {
	if err := validate.Enum(path, location, value, partyProductProviderEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this party product provider
func (m PartyProductProvider) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePartyProductProviderEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PartyProductProvider) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}

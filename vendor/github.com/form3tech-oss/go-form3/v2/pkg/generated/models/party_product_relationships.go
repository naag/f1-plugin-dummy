// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/form3tech-oss/go-form3/v2/pkg/client"
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// PartyProductRelationships party product relationships
// swagger:model PartyProductRelationships
type PartyProductRelationships struct {

	// party
	Party *RelationshipsPartyRef `json:"party,omitempty"`

	// party product events
	PartyProductEvents *RelationshipsPartyProductEventProperties `json:"party_product_events,omitempty"`
}

func PartyProductRelationshipsWithDefaults(defaults client.Defaults) *PartyProductRelationships {
	return &PartyProductRelationships{

		Party: RelationshipsPartyRefWithDefaults(defaults),

		PartyProductEvents: RelationshipsPartyProductEventPropertiesWithDefaults(defaults),
	}
}

func (m *PartyProductRelationships) WithParty(party RelationshipsPartyRef) *PartyProductRelationships {

	m.Party = &party

	return m
}

func (m *PartyProductRelationships) WithoutParty() *PartyProductRelationships {
	m.Party = nil
	return m
}

func (m *PartyProductRelationships) WithPartyProductEvents(partyProductEvents RelationshipsPartyProductEventProperties) *PartyProductRelationships {

	m.PartyProductEvents = &partyProductEvents

	return m
}

func (m *PartyProductRelationships) WithoutPartyProductEvents() *PartyProductRelationships {
	m.PartyProductEvents = nil
	return m
}

// Validate validates this party product relationships
func (m *PartyProductRelationships) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateParty(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePartyProductEvents(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PartyProductRelationships) validateParty(formats strfmt.Registry) error {

	if swag.IsZero(m.Party) { // not required
		return nil
	}

	if m.Party != nil {
		if err := m.Party.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("party")
			}
			return err
		}
	}

	return nil
}

func (m *PartyProductRelationships) validatePartyProductEvents(formats strfmt.Registry) error {

	if swag.IsZero(m.PartyProductEvents) { // not required
		return nil
	}

	if m.PartyProductEvents != nil {
		if err := m.PartyProductEvents.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("party_product_events")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PartyProductRelationships) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PartyProductRelationships) UnmarshalBinary(b []byte) error {
	var res PartyProductRelationships
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *PartyProductRelationships) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}

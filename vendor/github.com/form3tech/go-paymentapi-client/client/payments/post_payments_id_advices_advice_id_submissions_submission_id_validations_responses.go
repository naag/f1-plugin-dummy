// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/form3tech/go-paymentapi-client/models"
)

// PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsReader is a Reader for the PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidations structure.
type PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsCreated creates a PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsCreated with default headers values
func NewPostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsCreated() *PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsCreated {
	return &PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsCreated{}
}

/*PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsCreated handles this case with default header values.

Advice submission validation creation response
*/
type PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsCreated struct {
	Payload *models.AdviceSubmissionValidationCreationResponse
}

func (o *PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsCreated) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/advices/{adviceId}/submissions/{submissionId}/validations][%d] postPaymentsIdAdvicesAdviceIdSubmissionsSubmissionIdValidationsCreated  %+v", 201, o.Payload)
}

func (o *PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AdviceSubmissionValidationCreationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsBadRequest creates a PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsBadRequest with default headers values
func NewPostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsBadRequest() *PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsBadRequest {
	return &PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsBadRequest{}
}

/*PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsBadRequest handles this case with default header values.

Advice submission validation creation error
*/
type PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsBadRequest struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/advices/{adviceId}/submissions/{submissionId}/validations][%d] postPaymentsIdAdvicesAdviceIdSubmissionsSubmissionIdValidationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostPaymentsIDAdvicesAdviceIDSubmissionsSubmissionIDValidationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

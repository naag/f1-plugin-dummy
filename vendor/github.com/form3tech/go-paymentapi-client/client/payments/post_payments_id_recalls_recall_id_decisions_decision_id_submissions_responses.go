// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/form3tech/go-paymentapi-client/models"
)

// PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsReader is a Reader for the PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissions structure.
type PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsCreated creates a PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsCreated with default headers values
func NewPostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsCreated() *PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsCreated {
	return &PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsCreated{}
}

/*PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsCreated handles this case with default header values.

Recall decision submission creation response
*/
type PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsCreated struct {
	Payload *models.RecallDecisionSubmissionCreationResponse
}

func (o *PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsCreated) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/recalls/{recallId}/decisions/{decisionId}/submissions][%d] postPaymentsIdRecallsRecallIdDecisionsDecisionIdSubmissionsCreated  %+v", 201, o.Payload)
}

func (o *PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecallDecisionSubmissionCreationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsBadRequest creates a PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsBadRequest with default headers values
func NewPostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsBadRequest() *PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsBadRequest {
	return &PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsBadRequest{}
}

/*PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsBadRequest handles this case with default header values.

Recall decision submission creation error
*/
type PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsBadRequest struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsBadRequest) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/recalls/{recallId}/decisions/{decisionId}/submissions][%d] postPaymentsIdRecallsRecallIdDecisionsDecisionIdSubmissionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostPaymentsIDRecallsRecallIDDecisionsDecisionIDSubmissionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

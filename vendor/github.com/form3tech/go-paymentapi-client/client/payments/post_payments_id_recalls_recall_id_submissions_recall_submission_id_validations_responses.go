// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/form3tech/go-paymentapi-client/models"
)

// PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsReader is a Reader for the PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidations structure.
type PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsCreated creates a PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsCreated with default headers values
func NewPostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsCreated() *PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsCreated {
	return &PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsCreated{}
}

/*PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsCreated handles this case with default header values.

Recall submission validation creation response
*/
type PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsCreated struct {
	Payload *models.RecallSubmissionValidationCreationResponse
}

func (o *PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsCreated) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/recalls/{recallId}/submissions/{recallSubmissionId}/validations][%d] postPaymentsIdRecallsRecallIdSubmissionsRecallSubmissionIdValidationsCreated  %+v", 201, o.Payload)
}

func (o *PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecallSubmissionValidationCreationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsBadRequest creates a PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsBadRequest with default headers values
func NewPostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsBadRequest() *PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsBadRequest {
	return &PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsBadRequest{}
}

/*PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsBadRequest handles this case with default header values.

Recall submission validation creation error
*/
type PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsBadRequest struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/recalls/{recallId}/submissions/{recallSubmissionId}/validations][%d] postPaymentsIdRecallsRecallIdSubmissionsRecallSubmissionIdValidationsBadRequest  %+v", 400, o.Payload)
}

func (o *PostPaymentsIDRecallsRecallIDSubmissionsRecallSubmissionIDValidationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"io"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostBatchesParams creates a new PostBatchesParams object
// with the default values initialized.
func NewPostBatchesParams() *PostBatchesParams {
	var ()
	return &PostBatchesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostBatchesParamsWithTimeout creates a new PostBatchesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostBatchesParamsWithTimeout(timeout time.Duration) *PostBatchesParams {
	var ()
	return &PostBatchesParams{

		timeout: timeout,
	}
}

// NewPostBatchesParamsWithContext creates a new PostBatchesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostBatchesParamsWithContext(ctx context.Context) *PostBatchesParams {
	var ()
	return &PostBatchesParams{

		Context: ctx,
	}
}

// NewPostBatchesParamsWithHTTPClient creates a new PostBatchesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostBatchesParamsWithHTTPClient(client *http.Client) *PostBatchesParams {
	var ()
	return &PostBatchesParams{
		HTTPClient: client,
	}
}

/*PostBatchesParams contains all the parameters to send to the API endpoint
for the post batches operation typically these are written to a http.Request
*/
type PostBatchesParams struct {

	/*Form3PaymentMetadata*/
	Form3PaymentMetadata string
	/*PaymentBatch*/
	PaymentBatch io.ReadCloser
	/*XForm3TransactionTime*/
	XForm3TransactionTime *string
	/*XForm3CorrelationID*/
	XForm3CorrelationID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post batches params
func (o *PostBatchesParams) WithTimeout(timeout time.Duration) *PostBatchesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post batches params
func (o *PostBatchesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post batches params
func (o *PostBatchesParams) WithContext(ctx context.Context) *PostBatchesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post batches params
func (o *PostBatchesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post batches params
func (o *PostBatchesParams) WithHTTPClient(client *http.Client) *PostBatchesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post batches params
func (o *PostBatchesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithForm3PaymentMetadata adds the form3PaymentMetadata to the post batches params
func (o *PostBatchesParams) WithForm3PaymentMetadata(form3PaymentMetadata string) *PostBatchesParams {
	o.SetForm3PaymentMetadata(form3PaymentMetadata)
	return o
}

// SetForm3PaymentMetadata adds the form3PaymentMetadata to the post batches params
func (o *PostBatchesParams) SetForm3PaymentMetadata(form3PaymentMetadata string) {
	o.Form3PaymentMetadata = form3PaymentMetadata
}

// WithPaymentBatch adds the paymentBatch to the post batches params
func (o *PostBatchesParams) WithPaymentBatch(paymentBatch io.ReadCloser) *PostBatchesParams {
	o.SetPaymentBatch(paymentBatch)
	return o
}

// SetPaymentBatch adds the paymentBatch to the post batches params
func (o *PostBatchesParams) SetPaymentBatch(paymentBatch io.ReadCloser) {
	o.PaymentBatch = paymentBatch
}

// WithXForm3TransactionTime adds the xForm3TransactionTime to the post batches params
func (o *PostBatchesParams) WithXForm3TransactionTime(xForm3TransactionTime *string) *PostBatchesParams {
	o.SetXForm3TransactionTime(xForm3TransactionTime)
	return o
}

// SetXForm3TransactionTime adds the xForm3TransactionTime to the post batches params
func (o *PostBatchesParams) SetXForm3TransactionTime(xForm3TransactionTime *string) {
	o.XForm3TransactionTime = xForm3TransactionTime
}

// WithXForm3CorrelationID adds the xForm3CorrelationID to the post batches params
func (o *PostBatchesParams) WithXForm3CorrelationID(xForm3CorrelationID *string) *PostBatchesParams {
	o.SetXForm3CorrelationID(xForm3CorrelationID)
	return o
}

// SetXForm3CorrelationID adds the xForm3CorrelationId to the post batches params
func (o *PostBatchesParams) SetXForm3CorrelationID(xForm3CorrelationID *string) {
	o.XForm3CorrelationID = xForm3CorrelationID
}

// WriteToRequest writes these params to a swagger request
func (o *PostBatchesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Form3-Payment-Metadata
	if err := r.SetHeaderParam("Form3-Payment-Metadata", o.Form3PaymentMetadata); err != nil {
		return err
	}

	if o.PaymentBatch != nil {
		if err := r.SetBodyParam(o.PaymentBatch); err != nil {
			return err
		}
	}

	if o.XForm3TransactionTime != nil {

		// header param X-Form3-Transaction-Time
		if err := r.SetHeaderParam("X-Form3-Transaction-Time", *o.XForm3TransactionTime); err != nil {
			return err
		}

	}

	if o.XForm3CorrelationID != nil {

		// header param X-Form3-correlation-id
		if err := r.SetHeaderParam("X-Form3-correlation-id", *o.XForm3CorrelationID); err != nil {
			return err
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
